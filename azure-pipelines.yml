# ASP.NET Core
# Build and test ASP.NET Core web applications targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/vsts/pipelines/languages/dotnet-core

name: 'graphql'

pool:
  vmImage: 'windows-2019'

variables:
  buildConfiguration: 'Release'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

steps:
- task: DotNetCoreInstaller@0
  displayName: Install SDK
  inputs:
    version: '2.2.105' # replace this value with the version that you need for your project

- task: DotNetCoreCLI@2
  displayName: Install cake.tool
  inputs:
    command: 'custom' # Options: build, push, pack, publish, restore, run, test, custom
    custom: 'tool'
    arguments: 'install --tool-path dotnet-tools Cake.Tool'

- task: DotNetCoreCLI@2
  displayName: Install generate-docs
  inputs:
    command: 'custom' # Options: build, push, pack, publish, restore, run, test, custom
    custom: 'tool'
    arguments: 'install --tool-path dotnet-tools tanka.generate.docs'

- task: CmdLine@1
  displayName: Build.cake
  inputs:
    filename: 'dotnet-tools\dotnet-cake.exe'
    arguments: 'build.cake -artifactsDir=$(Build.ArtifactStagingDirectory) -configuration=$(buildConfiguration)'

- task: CmdLine@1
  displayName: Benchmarks
  inputs:
    filename: 'dotnet-tools\dotnet-cake.exe'
    arguments: 'build.cake -target=Benchmarks'

- task: CmdLine@1
  displayName: Docs
  inputs:
    filename: 'dotnet-tools\dotnet-cake.exe'
    arguments: 'build.cake -target=Docs -artifactsDir=$(Build.ArtifactStagingDirectory)'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: VSTest
    searchFolder: '$(Build.ArtifactStagingDirectory)'
    testResultsFiles: '**/*.trx' 
    mergeTestResults: false

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: 'BenchmarkDotNet.Artifacts' 
    artifactName: 'benchmarks' 

# Publish Build Artifacts
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'artifacts' 
    #publishLocation: 'Container' # Options: container, filePath
    #targetPath: # Required when publishLocation == FilePath
    #parallel: false # Optional
    #parallelCount: # Optional

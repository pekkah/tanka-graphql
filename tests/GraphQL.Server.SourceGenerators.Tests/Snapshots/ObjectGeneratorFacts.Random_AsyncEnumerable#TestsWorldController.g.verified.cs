//HintName: TestsWorldController.g.cs
/// <auto-generated/>

#nullable enable
using Microsoft.Extensions.Options;
using System;
using System.Threading.Tasks;
using Tanka.GraphQL.Executable;
using Tanka.GraphQL.Fields;
using Tanka.GraphQL.Server;
using Tanka.GraphQL.ValueResolution;

namespace Tests;
public static class WorldController
{
    public static ValueTask RandomResolver(ResolverContext context)
    {
        context.ResolvedValue = context.ObjectValue;
        return default;
    }

    public static ValueTask Random(SubscriberContext context, CancellationToken cancellationToken)
    {
        context.SetResult(((World)context.ObjectValue).Random(context.GetArgument<int>("from"), context.GetArgument<int>("to"), context.GetArgument<int>("count"), cancellationToken));
        return default;
    }
}

public static class WorldControllerExtensions
{
    public static SourceGeneratedTypesBuilder AddWorldController(this SourceGeneratedTypesBuilder builder)
    {
        builder.Builder.Configure(options => options.Builder.Add("World", new FieldsWithResolvers() { { "random(from: Int!, to: Int!, count: Int!): Int!", WorldController.RandomResolver } }, new FieldsWithSubscribers() { { "random(from: Int!, to: Int!, count: Int!): Int!", WorldController.Random } }));
        return builder;
    }
}
#nullable restore

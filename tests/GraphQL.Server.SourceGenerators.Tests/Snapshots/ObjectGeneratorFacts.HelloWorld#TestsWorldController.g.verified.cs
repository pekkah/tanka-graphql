//HintName: TestsWorldController.g.cs
/// <auto-generated/>
#nullable enable

using Microsoft.Extensions.Options;
using System;
using System.Threading.Tasks;
using Tanka.GraphQL.Executable;
using Tanka.GraphQL.Fields;
using Tanka.GraphQL.Server;
using Tanka.GraphQL.TypeSystem;
using Tanka.GraphQL.ValueResolution;

namespace Tests;

public static class WorldController
{
    public static ValueTask Hello(ResolverContext context)
    {
        context.ResolvedValue = ((World)context.ObjectValue).Hello(
            context.GetArgument<string>("name")
            );
        
        return default;
    }

    public static async ValueTask HelloAsync(ResolverContext context)
    {
        context.ResolvedValue = await ((World)context.ObjectValue).HelloAsync(
            context.GetArgument<string>("name")
            );
    }
}

public static class WorldControllerExtensions
{
    public static SourceGeneratedTypesBuilder AddWorldController(
        this SourceGeneratedTypesBuilder builder)
    {
        builder.Builder.Configure(options => options.Builder.Add(
            "World",
            new FieldsWithResolvers()
            {
                { "hello(name: String!): String!", WorldController.Hello },
                { "helloAsync(name: String!): String!", WorldController.HelloAsync }
            }            ));

        return builder;
    }
}

public partial class World: INamedType
{
    public string __Typename => "World";
}

#nullable restore
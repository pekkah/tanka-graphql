//HintName: TestsQueryController.g.cs
/// <auto-generated/>
#nullable enable

using Microsoft.Extensions.Options;
using System;
using System.Threading.Tasks;
using Tanka.GraphQL.Executable;
using Tanka.GraphQL.Fields;
using Tanka.GraphQL.Server;
using Tanka.GraphQL.TypeSystem;
using Tanka.GraphQL.ValueResolution;

namespace Tests;

public static partial class QueryController
{
    public static ValueTask Id(ResolverContext context)
    {
        BeforeId(context);
        
        context.ResolvedValue = Query.Id(
            context.GetArgument<int?>("p1")
            );
        
        AfterId(context);
        return default;
    }
    partial void BeforeId(ResolverContext context);
    partial void AfterId(ResolverContext context);
}

public static class QueryControllerExtensions
{
    public static SourceGeneratedTypesBuilder AddQueryController(
        this SourceGeneratedTypesBuilder builder)
    {
        builder.Builder.Configure(options => options.Builder.Add(
            "Query",
            new FieldsWithResolvers()
            {
                { "id(p1: Int): Int!", QueryController.Id }
            }            ));

        return builder;
    }
}

public static partial class Query
{
    public static string __Typename => "Query";
}

#nullable restore